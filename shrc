#!/bin/sh

# utilities

run_command_with_file() {
  local command=$1
  shift

  if [ $# -eq 0 ]; then
    local file=$(fd -t f . | fzf)

    [ -n "$file" ] && "$command" "$file"
  else
    "$command" "$@"
  fi
}

# cd

alias ch='cd "$(dirs -lp | sort -u | fzf)"'
alias cr='cd "$(fd -at d . $(git rev-parse --show-toplevel) | fzf)"'
alias cs='cd "$(ghq list --full-path | fzf)"'
alias ct='cd "$(git rev-parse --show-toplevel)"'

command=..
directory=..

for _ in $(seq 10); do
  command=$command.
  directory=$directory/..

  alias $command=$directory
done

c() {
  local dir=$(fd -t d . | fzf)

  [ -n "$dir" ] && cd "$dir"
}

# tmux

alias t=tmux
alias ta='tmux a'
alias tl='tmux ls'

# git

alias gap='git add --patch'
alias gb='git branch'
alias gba='git branch -a'
alias gbd='git branch -d'
alias gc="git commit"
alias gca="git commit --amend"
alias gcr='git commit -m Refactor'
alias gcw='git commit -m WIP'
alias gco='git checkout'
alias gcom='git checkout $(git_default_branch)'
alias gcp='git cherry-pick'
alias gd='git diff'
alias gdc='git diff --cached'
alias gdh='git diff HEAD^ HEAD'
alias gl='git log'
alias glf='git log -p --name-only'
alias glg='git log --decorate --graph --oneline'
alias glp='git log -p'
alias gm='git merge'
alias gpl='git pull'
alias gpp='git pull && git push'
alias gppa='git pull --all && git push'
alias gpr='gh pr checkout $(gh pr list | fzf | cut -f 1)'
alias gps='git push'
alias gpsu='git push -u origin $(git symbolic-ref --short HEAD)'
alias grc='git rebase --continue'
alias gri='git rebase -i'
alias grm='git rebase $(git_default_branch)'
alias gs='git status'
alias gsm='git submodule'
alias gsma='git submodule add'
alias gsmu='git submodule update --init --recursive'
alias gw='git worktree'
alias gwc='cd "$(git worktree list | fzf | cut -f 1 -d " ")"'
alias gwl='git worktree list'
alias gwr='git worktree remove "$(git worktree list | fzf | cut -f 1 -d " ")"'
alias gz='git stash'
alias gzd='git stash drop'
alias gzl='git stash list'
alias gzp='git stash pop'
alias gzs='git stash show -p'

git_default_branch() {
  git remote set-head origin --auto >/dev/null
  git symbolic-ref --short refs/remotes/origin/HEAD | sed "s%.*/%%"
}

ga() {
  if [ $# -eq 0 ]; then
    git add --all
  else
    git add "$@"
  fi &&
    git status
}

grh() {
  local message=$(git log --format=%B -n 1 HEAD^)
  git reset --soft HEAD^^ &&
    git commit -m "$message"
}

gsw() {
  if [ $# -ne 1 ]; then
    return 1
  fi

  if git rev-parse --verify >/dev/null 2>&1; then
    git checkout $1
  else
    git switch -C $1
  fi

}

gwa() {
  if [ $# -ne 0 ]; then
    return 1
  fi

  local dir=~/worktree/$(openssl rand -hex 8)

  git worktree add $dir "$(git branch --format '%(refname:short)' | fzf)" && cd $dir
}

# Editor

alias e='run_command_with_file nvim'

eg() {
  line=$(rg -n . | fzf)

  field() {
    echo "$line" | head -n 1 | cut -f $1 -d :
  }

  file=$(field 1)

  [ -n "$file" ] && nvim +"execute $(field 2) | normal zz" "$file"
}

er() {
  root_directory=$(git rev-parse --show-toplevel)
  file=$(git ls-files --full-name $root_directory | fzf)

  [ -n "$file" ] && nvim "$root_directory/$file"
}

# ls

alias ls="$(which eza >/dev/null 2>&1 && echo eza || echo /bin/ls --color)"
alias d=ls
alias d1='ls -1'
alias da='ls -a'
alias dl='ls -l'
alias dla='ls -la'
alias dm='ls ~'
alias dma='ls -a ~'
alias ds='ghq list --full-path'

# Others

alias f='run_command_with_file bat'
alias btm='btm -bn'
alias less='less -R'
alias s="$(which rg >/dev/null 2>&1 && echo 'rg --column --line-number' || echo 'grep -Hnr --color')"
